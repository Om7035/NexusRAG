[metadata]
name = nexusrag
version = 0.1.0
description = An open-source framework for building autonomous AI agents that reason over complex, multimodal data.
author = NexusRAG Team
author_email = your-email@example.com
license = Apache 2.0
license_file = LICENSE
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/your-username/NexusRAG
project_urls =
    Bug Tracker = https://github.com/your-username/NexusRAG/issues
    Documentation = https://github.com/your-username/NexusRAG/blob/main/README.md
    Source Code = https://github.com/your-username/NexusRAG

[options]
packages = find:
python_requires = >=3.8
install_requires =
    streamlit>=1.28.0
    unstructured>=0.10.10
    sentence-transformers>=2.2.2
    chromadb>=0.4.15
    transformers>=4.35.0
    torch>=2.1.0
    pymupdf>=1.23.5
    python-dotenv>=1.0.0
    reportlab>=4.0.0
    python-docx>=0.8.11
    beautifulsoup4>=4.12.2
    openai>=1.3.5
    cohere>=4.37
    pinecone-client>=2.2.4
    weaviate-client>=3.24.2
    anthropic>=0.18.0
    Pillow>=10.0.0
    pytesseract>=0.3.10
    google-generativeai>=0.3.0
    ollama>=0.1.0

[options.extras_require]
test =
    pytest>=7.0
    pytest-cov>=4.0
dev =
    black>=23.0
    flake8>=6.0
    mypy>=1.0

docs =
    mkdocs>=1.5.0
    mkdocs-material>=9.0.0

[flake8]
max-line-length = 88
extend-ignore = E203, W503

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

[coverage:run]
source = nexusrag

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:

[options.entry_points]
console_scripts =
    nexusrag = nexusrag.cli:main
